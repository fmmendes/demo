name: Build

on:
  pull_request:
  push:
    branches: [ develop, main ]

concurrency:
  group: ci-${{ github.ref }}-group
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set run name
        run: echo "::set-output name=run_name::[${{ github.ref_name }}] ${{ github.event.head_commit.message }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
          if ! command -v docker-compose; then
            echo "Docker Compose installation failed"
            exit 1
          fi

      - name: Set up Docker Compose
        env:
          JDBC_DATABASE_USERNAME: ${{ secrets.JDBC_DATABASE_USERNAME }}
          JDBC_DATABASE_PASSWORD: ${{ secrets.JDBC_DATABASE_PASSWORD }}
        run: docker-compose -f compose.yaml up -d

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until docker exec $(docker ps -q -f name=postgres) pg_isready; do
            sleep 1
          done

      - name: Get PostgreSQL container IP
        id: get_ip
        run: |
          echo "Getting PostgreSQL container IP..."
          echo "::set-output name=postgres_ip::$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q -f name=postgres))"

      - name: Build with Maven
        env:
          JDBC_DATABASE_URL: jdbc:postgresql://${{ steps.get_ip.outputs.postgres_ip }}:5432/demo
          JDBC_DATABASE_USERNAME: ${{ secrets.JDBC_DATABASE_USERNAME }}
          JDBC_DATABASE_PASSWORD: ${{ secrets.JDBC_DATABASE_PASSWORD }}
        run: mvn -B -q package --file pom.xml
